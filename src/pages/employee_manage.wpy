<style lang="less">
@import '../style/common.less';

.page {
  .weui-tab {
    .weui-navbar {
      border-bottom: 0;
      box-shadow: none;

      .weui-navbar__item {
        color: #9B9B9B;
        font-weight: 400;

        .weui-navbar__title {
          font-size: 32rpx;
          line-height: 44rpx;
        }
      }

      .weui-bar__item_on {
        color: @txtColor;
      }

      .weui-navbar__slider {
        width: 60px;
        background: #C42B2B;
        height: 4rpx;
      }
    }
  }

  .employee,.verify {
    .list{
      padding-top: 40rpx;

      .list-item{
        margin: 0 24rpx 12rpx 26rpx;
        border-radius: 16rpx;
        background: #2E2E2E;
        min-height: 200rpx;
        .betweenBox;
        align-items: center;
        flex-direction: column;

        .top{
          width: 616rpx;
          display: flex;
          align-items: center;
          margin: 42rpx;
          margin-bottom: 0;

          .avatar{
            width: 116rpx;
            height: 116rpx;
            margin-right: 40rpx;
          }

          .name{
            .one{
              color: #FAFAFA;
              font-size: 32rpx;
              line-height: 44rpx;
              margin-bottom: 12rpx;
            }

            .two{
              color: #9B9B9B;
              font-size: 28rpx;
              line-height: 40rpx;
            }
          }
        }

        .foot{
          width: 616rpx;
          margin: 30rpx 36rpx 0;
          border-top: 2rpx solid #4A4A4A;
          display:flex;
          justify-content: space-around;
          align-items: center;

          .btn{
            width: 308rpx;
            color: #FFFFFF;
            font-size: 24rpx;
            line-height: 34rpx;
            margin:28rpx 0;
            text-align:center;

            &:first-child{
              border-right: 2rpx solid #4A4A4A;
            }
          }
        }
      }
    }
  }

  .verify{
    .top{
      justify-content: space-between;

      .top-left{
        display: flex;
        align-items: center;
      }

      .top-right{
        height: 55rpx;
        line-height: 55rpx;

        .fail,.pass{
          width: 50rpx;
          height: 50rpx;
          margin: 0 30rpx;
        }
      }
    }
  }
}

</style>
<template>
  <view class="page">
    <view class="weui-tab">
      <!-- 顶部 -->
      <view class="weui-navbar">
        <repeat for="{{tabs}}" key="*this">
          <view id="{{index}}" class="weui-navbar__item {{activeIndex == index ? 'weui-bar__item_on' : ''}}" @tap="tabClick">
            <view class="weui-navbar__title">{{item}}</view>
          </view>
        </repeat>
        <view class="weui-navbar__slider" style="left:{{sliderLeft}}px;transform:translateX({{sliderOffset}}px);-webkit-transform:translateX({{sliderOffset}}px);"></view>
      </view>
      <!-- 内容 -->
      <view class="weui-tab__panel">
        <!-- 员工列表 -->
        <view class="weui-tab__content employee" hidden="{{activeIndex != 0}}">
          <view class="list">
            <view class="list-item" wx:for="{{ employee_list }}" wx:key="item">
              <view class="top">
                <image wx:if="{{ item.position == '店长' }}" class="avatar" src="../images/mine/shopkeeper.png" />
                <image wx:if="{{ item.position == '管理员' }}" class="avatar" src="../images/mine/manager.png" />
                <image wx:if="{{ item.position == '普通员工' }}" class="avatar" src="../images/mine/staff.png" />
                <view class="name">
                  <view class="one">{{ item.name }}</view>
                  <view class="two">{{ item.position }}</view>
                </view>
              </view>
              <view class="foot" wx:if="{{ is_root }}">
                <navigator  url="/pages/identify?employee_id={{ item.employee_id }}&target=2" hover-class="none" class="btn">修改资料</navigator>
                <view data-id="{{ item.employee_id }}" @tap="deleteStaff" class="btn">删除员工</view>
              </view>
            </view>
          </view>
        </view>

        <!-- 审核列表 -->
        <view class="weui-tab__content verify" hidden="{{activeIndex != 1}}">
          <view class="list">
            <view class="list-item" wx:for="{{ staff_auth_list }}" wx:key="item">
              <view class="top">
                <view class="top-left">
                  <image class="avatar" src="../images/mine/staff.png"></image>
                  <view class="name">
                    <view class="one">{{item.name}}</view>
                  </view>
                </view>

                <view class="top-right">
                  <image @tap="reject" id="{{ item.employee_id }}" class="fail" src="../images/mine/fail.png"></image>
                  <image @tap="agree" id="{{ item.employee_id }}" class="pass" src="../images/mine/pass.png"></image>
                </view>
              </view>
            </view>
          </view>
        </view>
      </view>
    </view>
  </view>
  <alert :is_active.sync="is_active" :alertInfo.sync="alertInfo"></alert>
</template>
<script>
import wepy from 'wepy'
import util from '../utils/util'
import tip from '../utils/tip'
import {
  SYSTEM_INFO,
  SEL_CLASS_CODE
} from '../utils/constant';
import Alert from '../components/myAlert'
import api from "../api/api"

const sliderWidth = 60 // 需要设置slider的宽度，用于计算中间位置
export default class EmployeeManage extends wepy.page {
  config = {
    navigationBarTitleText: '员工管理'
  }

  components = {
    alert: Alert
  }

  data = {
    //weui的tab参数
    tabs: ["员工列表", "审核列表"],
    activeIndex: 0,//激活项
    sliderOffset: 0,//x轴上转换的值
    sliderLeft: 0,//距离左边的偏移值

    staff_auth_list: [],
    auth_status:"none",
    employee_list: [],
    alertInfo: {
      alert_title: "删除员工",
      msg: "确认要删除员工陈奕迅？删除后不可撤回操作！\n",
      comfirm: 0,
      confirmText: '确认删除',
    },
    is_active:0,
    is_root:wepy.getStorageSync('is_root'),
  }

  methods = {
    async tabClick(e) {
      this.sliderOffset = e.currentTarget.offsetLeft;
      this.activeIndex = e.currentTarget.id;
      this.$apply();
      let employee_id = wepy.getStorageSync("userid")
      if (this.activeIndex == 1){
        await this.getstaffauthlist(employee_id)
      }else{
        await this.getstafflist(employee_id)
      }
    },
    async deleteStaff (e) {
      this.is_active = 1
      let employee_id = e.currentTarget.dataset.id
      this.alertInfo.employee_id = employee_id
    },
    async agree (e) {
      let employee_id = e.currentTarget.id;
      await this.updatestaffauth(employee_id,0)
      await this.getstafflist(employee_id)
    },
    async reject (e) {
      let employee_id = e.currentTarget.id;
      await this.updatestaffauth(employee_id,1)
      await this.getstafflist(employee_id)
    },
  }

  async updatestaffauth (employee_id,auth_status) {
    const res = await api.updatestaffauth({
      query: {
        employee_id: employee_id,
        auth_status: auth_status,
      },
      method: 'POST'
    });
    if (res.data.status){
      tip.success("通过审核")
    }else{
      tip.error("系统错误")
    }
  }

  async getstaffinfo (employee_id) {
    const res = await api.getstaffinfo({
      query: {
        employee_id: employee_id,
      },
      method: 'POST'
    });
    this.auth_status = res.data.data[0].auth_status
    this.is_root = res.data.data[0].is_root
    this.$apply()
  }

  async getstaffauthlist (employee_id) {
    const res = await api.getstaffauthlist({
      query: {
        employee_id: employee_id,
      },
      method: 'POST'
    });
    this.staff_auth_list = res.data.data
    this.$apply()
  }

  async getstafflist (employee_id) {
    const res = await api.getstafflist({
      query: {
        employee_id: employee_id,
      },
      method: 'POST'
    });
    this.employee_list = res.data.data
    this.$apply()
  }

  events = {
    'comfirmAction': async  (comfirm,employee_id) => {
      console.log(employee_id)
      if (comfirm == 1) {
        const res = await api.updatestaffauth({
          query: {
            employee_id: employee_id,
            auth_status: 2,
          },
          method: 'POST'
        })
        if (res.data.status) {
          tip.success("删除成功")
          await this.getstafflist(wepy.getStorageSync("userid"))
        }
      }
    }
  }

  async onLoad(option) {
    let that = this;
    wx.getSystemInfo({
      success: function (res) {
        that.sliderLeft = (res.windowWidth / that.tabs.length - sliderWidth) / 2;
        that.sliderOffset = res.windowWidth / that.tabs.length * that.activeIndex;
      }
    });

    let employee_id = option.employee_id
    this.employee_id = employee_id
    this.$apply()
  }

  async onShow() {
    let employee_id = wepy.getStorageSync("userid")
    await this.getstafflist(employee_id)
    await this.getstaffinfo(employee_id)
  }
}
</script>
