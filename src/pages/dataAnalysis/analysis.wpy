<style scoped lang="less">
    @import '../../style/common.less';
    .page {
        @cardHeight: 394rpx; //顶部div高
        color: @titleColor;
        .card {
            height: @cardHeight;
            .card-blur {
                height: @cardHeight;
                .blur;
            }
            .card-content {
                height: 254rpx;
                width: 618rpx;
                position: absolute;
                top: 0;
                .betweenBox;
                flex-wrap: wrap;
                margin: 60rpx 66rpx 80rpx;
                .column {
                    flex-basis: 100%;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                }
                .left {
                    .user-name {
                        color: @txtColor;
                        font-size: 40rpx;
                        line-height: 56rpx;
                    }
                    .date {
                        color: @txtColor;
                        font-size: 28rpx;
                        line-height: 40rpx;
                    }
                }
                .right {
                    .book-info {
                        text {
                            display: block;
                            color: #9B9B9B;
                            font-size: 24rpx;
                            line-height: 35rpx;
                        }
                    }
                    .icon {
                        height: 48rpx;
                        width: 140rpx;
                        line-height: 48rpx;
                        font-size: 24rpx;
                        background: #C42B2B;
                        text-align: center;
                        border-radius: 12rpx;
                    }
                }
            }
        }
        .weui-tab {
            .weui-navbar {
                border-bottom: 0;
                box-shadow: none;
                .weui-navbar__item {
                    color: @txtColor;
                    font-weight: 400;
                    .weui-navbar__title {
                        font-size: 32rpx;
                        line-height: 44rpx;
                    }
                }
                .weui-bar__item_on {
                    color: @txtColor;
                }
                .weui-navbar__slider {
                    width: 50px;
                    background: #C42B2B;
                    height: 4rpx;
                }
            }
        }
        .order {
            .order-number,
            .in-come,
            .new-user {
                .list-item {
                    //width: 616rpx;
                    margin: 0 24rpx 12rpx 26rpx;
                    border-radius: 16rpx;
                    background: #2E2E2E;
                    height: 250rpx;
                    .title {
                        font-size: 28rpx;
                        padding: 24rpx;
                    }
                    .container {
                        position: relative;
                        display: inline-block;
                        vertical-align: middle;
                    }
                    .pannel {
                        display: inline-block;
                        margin-left: 24rpx;
                        margin-top: 16rpx;
                        width: 200rpx;
                        height: 100rpx;
                        background: #C42B2B;
                        color: #ffffff;
                        font-size: 20rpx;
                        border-radius: 16rpx;
                        overflow: hidden;
                        vertical-align: middle;
                        box-shadow: 2rpx 4rpx 4rpx #000000;
                        .left {
                            display: inline-block;
                            width: 104rpx;
                            text-align: center;
                            .sub {
                                position: relative;
                                top: 14rpx;
                                margin: auto;
                                width: 52rpx;
                                height: 54rpx;
                            }
                        }
                        .right {
                            background: #c83939;
                            border-radius: 16rpx;
                            border-bottom-left-radius: 30rpx;
                            border-top-left-radius: 30rpx;
                            display: inline-block;
                            font-size: 32rpx;
                            text-align: center;
                            line-height: 100rpx;
                            width: 96rpx;
                            height: 100rpx;
                        }
                        .delete {
                            position: absolute;
                            top: 0rpx;
                            left: 200rpx;
                            width: 40rpx;
                            height: 40rpx;
                            border-radius: 50%;
                            background: #D0021B;
                            box-shadow: 2rpx 2rpx 4rpx #000000;
                            .text {
                                height: 40rpx;
                                width: 40rpx;
                                font-size: 60rpx;
                                font-weight: 400;
                                line-height: 30rpx;
                                text-align: center;
                            }
                        }
                        .add {
                            .text {
                                color: #6D6E71;
                                text-align: center;
                                font-size: 50rpx;
                                font-weight: 400;
                                height: 56rpx;
                            }
                        }
                        .tips {
                            color: #6D6E71;
                            font-size: 20rpx;
                            text-align: center;
                        }
                    }
                    .add-pannel {
                        background: #2E2E2E;
                        border: 2rpx solid #6D6E71;
                    }
                }
            }
            .in-come {
                .list-item {
                    .pannel {
                        background: #F5A623;
                        .right {
                            background: #F6B03C;
                        }
                    }
                    .add-pannel {
                        background: #2E2E2E;
                        border: 2rpx solid #6D6E71;
                    }
                }
            }
            .new-user {
                .list-item {
                    .pannel {
                        background: #8BA909;
                        .right {
                            background: #92AE18;
                        }
                    }
                    .add-pannel {
                        background: #2E2E2E;
                        border: 2rpx solid #6D6E71;
                    }
                }
            }
            .data-sum {
                margin: 0 24rpx 12rpx 26rpx;
                border-radius: 16rpx;
                background: #2E2E2E;
                height: 250rpx;
                .add {
                    color: #6D6E71;
                    font-size: 56rpx;
                    font-weight: 400;
                    text-align: center;
                    padding-top: 42rpx;
                }
                .tips {
                    color: #6D6E71;
                    font-size: 28rpx;
                    text-align: center;
                }
            }
            .no-data {
                .no-data(60rpx);
            }
        }
        .weui-tab__panel {
            padding-top: 0;
        }
        .weui-tab {
            top: -64rpx;
        }
    }
</style>

<template>
    <view class="page">
        <view class="card">
            <view class="card-blur" style="background:url('{{userInfo.avatarUrl}}') no-repeat;background-position:center;background-size: cover;">
            </view>
            <view class="card-content">
                <view class="left column">
                    <view class="user-name">{{time}}，{{userInfo.nickName}}</view>
                    <!-- ！！这里需要后台返回日期 -->
                    <view class="date">2018年9月6日</view>
                </view>
                <view class="right column">
                    <view class="book-info">
                        <text>今日预约：{{ homeInfo.today_number }}{{is_edit}}单</text>
                        <text>本周预约：{{ homeInfo.week_number }}单</text>
                    </view>
                    <!-- ！！什么时候显示空闲、火爆和正常的图片？然后红绿黄三张图片我随便截的，缺原切图。 -->
                    <!-- <image src="../../images/book/hot.png" class="icon"></image> -->
                    <view class="icon" @tap="edit()">
                        {{ button_title }}
                    </view>
                </view>
            </view>
        </view>
        <view class="weui-tab">
            <!-- 内容 -->
            <view class="weui-tab__panel">
                <view class="weui-tab__content order">
                    <view class="order-number list">
                        <view class="list-item">
                            <view class="title">订单数（个）</view>
                            <view class="container" wx:for="{{ order_number.selected }}" wx:for-item="selectItem" wx:key="index">
                                <view class="pannel">
                                    <view class="left">
                                        <view class="sub">
                                            {{selectItem.title}}
                                        </view>
                                    </view>
                                    <view class="right">
                                        {{selectItem.count}}
                                    </view>
                                    <view class="delete" wx:if="{{is_edit}}" wx:for-item="del" @tap="delete({{selectItem}},1)">
                                        <view class="text">-</view>
                                    </view>
                                </view>
                            </view>
                            <view class="container">
                                <view class="pannel add-pannel" wx:for="{{ order_number.unselected }}" wx:key="item" @tap="add({{item}},1)">
                                    <view class="add">
                                        <view class="text">
                                            +
                                        </view>
                                    </view>
                                    <view class="tips"> {{ item.title }}</view>
                                </view>
                            </view>
                        </view>
                    </view>
                    <view class="in-come list">
                        <view class="list-item">
                            <view class="title">营业额（元）</view>
                            <view class="container" wx:for="{{ in_come.selected }}" wx:for-item="selectItem" wx:key="index">
                                <view class="pannel">
                                    <view class="left">
                                        <view class="sub">
                                            {{selectItem.title}}
                                        </view>
                                    </view>
                                    <view class="right">
                                        {{selectItem.count}}
                                    </view>
                                    <view class="delete" wx:if="{{is_edit}}" wx:for-item="del" @tap="delete({{selectItem}},2)">
                                        <view class="text">-</view>
                                    </view>
                                </view>
                            </view>
                            <view class="container">
                                <view class="pannel add-pannel" wx:for="{{ in_come.unselected }}" wx:key="item" @tap="add({{item}},2)">
                                    <view class="add">
                                        <view class="text">
                                            +
                                        </view>
                                    </view>
                                    <view class="tips"> {{ item.title }}</view>
                                </view>
                            </view>
                        </view>
                    </view>
                    <view class="new-user list">
                        <view class="list-item">
                            <view class="title">新增用户个数（个）</view>
                            <view class="container" wx:for="{{ new_user.selected }}" wx:for-item="selectItem" wx:key="index">
                                <view class="pannel">
                                    <view class="left">
                                        <view class="sub">
                                            {{selectItem.title}}
                                        </view>
                                    </view>
                                    <view class="right">
                                        {{selectItem.count}}
                                    </view>
                                    <view class="delete" wx:if="{{is_edit}}" wx:for-item="del" @tap="delete({{selectItem}},3)">
                                        <view class="text">-</view>
                                    </view>
                                </view>
                            </view>
                            <view class="container">
                                <view class="pannel add-pannel" wx:for="{{ new_user.unselected }}" wx:key="item" @tap="add({{item}},3)">
                                    <view class="add">
                                        <view class="text">
                                            +
                                        </view>
                                    </view>
                                    <view class="tips"> {{ item.title }}</view>
                                </view>
                            </view>
                        </view>
                    </view>
                    <view class="data-sum list">
                        <view class="list-item">
                            <view class="add">
                                +
                            </view>
                            <view class="tips">
                                添加模块
                            </view>
                        </view>
                    </view>
                </view>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import util from '../../utils/util'
    import Search from '../../components/search'
    import Recharge from '../../components/recharge'
    import {
        SYSTEM_INFO,
        SEL_CLASS_CODE
    } from '../../utils/constant';
    import Tap from '../../components/tap'
    import api from '../../api/api'
    const sliderWidth = 50 // 需要设置slider的宽度，用于计算中间位置
    export default class Home extends wepy.page {
        config = {
            navigationBarTitleText: '预约列表'
        }
        components = {
            search: Search,
            recharge: Recharge,
            tap: Tap,
        }
        data = {
            userInfo: {
                nickName: '加载中...'
            },
            time: "上午好",
            homeInfo: {
                today_number: 0,
                week_number: 0
            },
            employee: {
                name: wepy.getStorageSync('user_info').nickName
            },
            is_edit: 0,
            button_title: '编辑',
            order_number: {
                'selected': [],
                'unselected': [{
                        sort: 0,
                        title: '今天 Today',
                        count: 0
                    },
                    {
                        sort: 1,
                        title: '本周 WTD',
                        count: 0
                    },
                    {
                        sort: 2,
                        title: '本月 MTD',
                        count: 0
                    }
                ]
            },
            in_come: {
                'selected': [],
                'unselected': [{
                        sort: 0,
                        title: '今天 Today',
                        count: 0
                    },
                    {
                        sort: 1,
                        title: '本周 WTD',
                        count: 0
                    },
                    {
                        sort: 2,
                        title: '本月 MTD',
                        count: 0
                    }
                ]
            },
            new_user: {
                'selected': [],
                'unselected': [{
                        sort: 0,
                        title: '今天 Today',
                        count: 0
                    },
                    {
                        sort: 1,
                        title: '本周 WTD',
                        count: 0
                    },
                    {
                        sort: 2,
                        title: '本月 MTD',
                        count: 0
                    }
                ]
            },
        }
        computed = {
            now() {
                return +new Date()
            }
        }
        methods = {
            edit() {
                if (this.is_edit === 0) {
                    this.is_edit = 1
                    this.button_title = "完成"
                } else {
                    this.is_edit = 0
                    this.button_title = "编辑"
                }
                this.$apply()
            },
            add(item, type) {
                console.log('type', type)
                let target = ''
                if (type == 1) {
                    target = this.order_number
                } else if (type == 2) {
                    target = this.in_come
                } else {
                    target = this.new_user
                }
                let index = this.getIndex(target.unselected, item)
                target.selected.push(item)
                target.unselected.splice(index, 1)
                if (type == 1) {
                    wepy.setStorageSync('order_number', target)
                } else if (type == 2) {
                    wepy.setStorageSync('in_come', target)
                } else {
                    wepy.setStorageSync('new_user', target)
                }
                this.$apply()
            },
            delete(item, type) {
                let target = ''
                if (type == 1) {
                    target = this.order_number
                } else if (type == 2) {
                    target = this.in_come
                } else {
                    target = this.new_user
                }
                let index = this.getIndex(target.selected, item)
                target.unselected.push(item)
                target.selected.splice(index, 1)
                if (type == 1) {
                    wepy.setStorageSync('order_number', target)
                } else if (type == 2) {
                    wepy.setStorageSync('in_come', target)
                } else {
                    wepy.setStorageSync('new_user', target)
                }
                this.$apply()
            }
        }
        getIndex(obj, str) {
            let returnIndex = 0
            obj.forEach((item, index) => {
                if (item.sort == str.sort) {
                    returnIndex = index
                }
            })
            return returnIndex
        }
        async getorderoverview(employee_id) {
            let myDate = new Date();
            let hour = myDate.getHours();
            if (hour > 12) {
                this.time = "下午好"
                this.$apply()
            }
            let order_status = wepy.getStorageSync('activeIndex') ? wepy.getStorageSync('activeIndex') : 0;
            console.log(order_status)
            const res = await api.getorderoverview({
                query: {
                    employee_id: employee_id,
                    order_status: order_status
                },
                method: 'POST'
            });
            if (!res.data.status > 0) {
                wepy.setStorageSync('userid', '')
                await this.$parent.getAuth()
            }
            this.homeInfo = res.data.data[0]
            if (this.homeInfo) {
                wepy.setStorageSync('is_root', this.homeInfo.is_root)
                this.orderList = this.homeInfo.order_list
            }
            this.$apply()
        }
        events = {
            //type 0 未完成 1已完成
            'getorderlist': async(type) => {
                const res = await api.getorderlist({
                    query: {
                        employee_id: wepy.getStorageSync('userid'),
                        order_status: type
                    },
                    method: 'POST'
                });
                this.orderList = res.data.data
                this.$apply()
            },
        }
        updateData(items, resData) {
            console.log('items', items)
            if (items.selected) {
                items.selected.forEach(function(item) {
                    if (item.sort == 0) {} else if (item.sort == 1) {} else {}
                })
            }
            if (items.unselected) {
                items.unselected.forEach(function(item) {
                    if (item.sort == 0) {
                        item.count = resData.today
                    } else if (item.sort == 1) {
                        item.count = resData.week
                    } else {
                        item.count = resData.month
                    }
                })
            }
            this.$apply()
            console.log('tag', items)
        }
        async onLoad() {
            let that = this;
            wepy.removeStorageSync('order_number')
            wepy.removeStorageSync('in_come')
            wepy.removeStorageSync('new_user')
            if (!wepy.getStorageSync('userid')) {
                await this.$parent.getAuth()
                this.userInfo = wepy.getStorageSync('user_info')
                await this.getorderoverview(wepy.getStorageSync('userid'))
                this.$apply()
            } else {
                this.userInfo = wepy.getStorageSync('user_info')
                await this.getorderoverview(wepy.getStorageSync('userid'))
                this.$apply()
            }
            let res = await api.getanalysismainpage({
                query: {
                    analysis_item_list: '1,2,3,4,5,6,7,8,9',
                    branch_id: 1,
                    merchant_id: wepy.getStorageSync('merchant_id')
                },
                method: 'POST'
            })
            let data = res.data.data[0]
            if (wepy.getStorageSync('order_number')) {
                let resData = {
                    'today': data.today_orders_number,
                    'week': data.week_orders_number,
                    'month': data.month_orders_number
                }
                console.log('resData', resData)
                this.updateData(wepy.getStorageSync('order_number'), resData)
            } else {
                let resData = {
                    'today': data.today_orders_number,
                    'week': data.week_orders_number,
                    'month': data.month_orders_number
                }
                console.log('resData', resData)
                this.updateData(this.order_number, resData)
            }
            wepy.setStorageSync('order_number', this.order_number)
            if (wepy.getStorageSync('in_come')) {
                let resData = {
                    'today': data.today_revenue,
                    'week': data.week_revenue,
                    'month': data.month_revenue
                }
                this.updateData(wepy.getStorageSync('in_come'), resData)
            } else {
                let resData = {
                    'today': data.today_revenue,
                    'week': data.week_revenue,
                    'month': data.month_revenue
                }
                this.updateData(this.in_come, resData)
            }
            wepy.setStorageSync('in_come', this.in_come)
            if (wepy.getStorageSync('new_user')) {
                let resData = {
                    'today': data.today_new_user_number,
                    'week': data.week_new_user_number,
                    'month': data.month_new_user_number
                }
                this.updateData(wepy.getStorageSync('new_user'), resData)
            } else {
                let resData = {
                    'today': data.today_new_user_number,
                    'week': data.week_new_user_number,
                    'month': data.month_new_user_number
                }
                this.updateData(this.new_user, resData)
            }
            wepy.setStorageSync('new_user', this.new_user)
        }
        async onShow() {
            if (wepy.getStorageSync('order_number')) {
                this.order_number = wepy.getStorageSync('order_number')
            }
            if (wepy.getStorageSync('in_come')) {
                this.in_come = wepy.getStorageSync('in_come')
            }
            if (wepy.getStorageSync('new_user')) {
                this.new_user = wepy.getStorageSync('new_user')
            }
            //   this.getorderlist(this.activeIndex);
        }
    }
</script>
